package com.generic.functional.automation.ui.tests.datastudio;

import com.aventstack.extentreports.Status;
import com.generic.functional.automation.ui.tests.common.TestConfig;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.concurrent.TimeUnit;

public class ClusterAutomation extends TestConfig {

    final int time_to_wait = 60;
    WebDriverWait wait;

    @BeforeMethod
    public void beforeMethod() {
        wait = new WebDriverWait(driver, 15);
    }

    @BeforeClass
    public void DataStudioLogin() throws Exception {
        test = extent.createTest("Data Studio till login");
        login.doLogin(test);

    }
    

    @Test
    public void TestingClusters() {
        try {
            test = extent.createTest("Data Studio Adding and removing clusters in Pardhus DB");
            login.doLogin(test);
            WebElement DataStudioBtn = driver.findElement(By.xpath("//*[@id=\"databaseManager\"]"));
            wait.until(ExpectedConditions.visibilityOf(DataStudioBtn));
            DataStudioBtn.click();
            test.createNode("DataStudio Click ");
            Thread.sleep(2000);
            driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);

            WebElement PardhuPlusCir = driver.findElement(By.xpath("//*[@id=\"plusCircle-subject-pardhu\"]"));
            wait.until(ExpectedConditions.elementToBeClickable(PardhuPlusCir));
            Thread.sleep(2000);
            PardhuPlusCir.click();
            test.createNode("Pardhu PlusCir click");

            WebElement PardhuPlus = driver.findElement(By.id("controlButtonAdd-subject-pardhu"));
            wait.until(ExpectedConditions.visibilityOf(PardhuPlus));
            PardhuPlus.click();
            test.createNode("PardhuPlus click");

            WebElement ClusterName = driver.findElement(By.xpath("//input[@name='clusterName']"));
            wait.until(ExpectedConditions.visibilityOf(ClusterName));
            ClusterName.click();
            ClusterName.sendKeys("AutoGenerated");
            test.createNode("Cluster name entered AutoGenerated");

            WebElement description = driver.findElement(By.xpath("//input[@name='description']"));
            wait.until(ExpectedConditions.visibilityOf(description));
            description.click();
            description.sendKeys("AutoGenerated");
            test.createNode("Description entered Autogenerated");

            WebElement nlpTokens = driver.findElement(By.xpath("//input[@name='nlpTokens']"));
            wait.until(ExpectedConditions.visibilityOf(nlpTokens));
            nlpTokens.click();
            nlpTokens.sendKeys("AutoGenerated");
            test.createNode("nlp entered AutoGenerated");

            WebElement Add = driver.findElement(By.id("add-inside-subject"));
            wait.until(ExpectedConditions.elementToBeClickable(Add));
            Add.click();
            test.createNode("Cluster Autogenerated added successfully");

            Thread.sleep(2000);
            WebElement tableBtn = driver.findElement(By.id("plusCircle-table-AutoGenerated"));
            wait.until(ExpectedConditions.elementToBeClickable(tableBtn));
            tableBtn.click();
            test.createNode("Click on Auto generate table");

            WebElement remove = driver.findElement(By.id("controlsIconsDelete-table-AutoGenerated"));
            wait.until(ExpectedConditions.elementToBeClickable(remove));
            remove.click();
            test.createNode("Click to remove");

            WebElement del = driver.findElement(By.cssSelector("button[class='MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedSecondary MuiButton-containedSizeSmall MuiButton-sizeSmall']"));
            wait.until(ExpectedConditions.elementToBeClickable((del)));
            del.click();
            test.createNode("Click on delete");
            Thread.sleep(5000);
        }catch (Exception e){
            test.createNode("Exception (" + e.toString() + ") found").fail(e);
        }
    }
}
